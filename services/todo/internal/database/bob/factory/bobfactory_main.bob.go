// Code generated by BobGen sql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

import (
	"context"
	"time"

	models "github.com/brunoluiz/go-lab/services/todo/internal/database/bob/models"
)

type Factory struct {
	baseTaskMods TaskModSlice
}

func New() *Factory {
	return &Factory{}
}

func (f *Factory) NewTask(mods ...TaskMod) *TaskTemplate {
	return f.NewTaskWithContext(context.Background(), mods...)
}

func (f *Factory) NewTaskWithContext(ctx context.Context, mods ...TaskMod) *TaskTemplate {
	o := &TaskTemplate{f: f}

	if f != nil {
		f.baseTaskMods.Apply(ctx, o)
	}

	TaskModSlice(mods).Apply(ctx, o)

	return o
}

func (f *Factory) FromExistingTask(m *models.Task) *TaskTemplate {
	o := &TaskTemplate{f: f, alreadyPersisted: true}

	o.ID = func() string { return m.ID }
	o.Title = func() string { return m.Title }
	o.IsCompleted = func() bool { return m.IsCompleted }
	o.CreatedAt = func() time.Time { return m.CreatedAt }

	return o
}

func (f *Factory) ClearBaseTaskMods() {
	f.baseTaskMods = nil
}

func (f *Factory) AddBaseTaskMod(mods ...TaskMod) {
	f.baseTaskMods = append(f.baseTaskMods, mods...)
}
