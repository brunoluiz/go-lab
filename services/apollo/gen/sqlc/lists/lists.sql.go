// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: lists.sql

package lists

import (
	"context"
)

const byUID = `-- name: ByUID :one
SELECT id, uid, title, created_at FROM lists
WHERE uid = $1 LIMIT 1
`

func (q *Queries) ByUID(ctx context.Context, uid string) (List, error) {
	row := q.db.QueryRowContext(ctx, byUID, uid)
	var i List
	err := row.Scan(
		&i.ID,
		&i.UID,
		&i.Title,
		&i.CreatedAt,
	)
	return i, err
}

const create = `-- name: Create :one
INSERT INTO lists (
  uid,
  title
) VALUES ($1, $2)
RETURNING id, uid, title, created_at
`

type CreateParams struct {
	UID   string `json:"uid"`
	Title string `json:"title"`
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (List, error) {
	row := q.db.QueryRowContext(ctx, create, arg.UID, arg.Title)
	var i List
	err := row.Scan(
		&i.ID,
		&i.UID,
		&i.Title,
		&i.CreatedAt,
	)
	return i, err
}
