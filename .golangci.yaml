version: "2"
run:
  modules-download-mode: readonly
output:
  formats:
    text:
      path: stdout
      print-linter-name: true
      print-issued-lines: true
linters:
  enable:
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - embeddedstructfieldcheck
    - copyloopvar # detects places where loop variables are copied (Go 1.22+)
    - dupl # tool for code clone detection
    - durationcheck # checks for two durations multiplied together
    - errcheck # checking for unchecked errors, these unchecked errors can be critical bugs in some cases
    - errname # checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error
    - errorlint # finds code that will cause problems with the error wrapping scheme introduced in Go 1.13
    - exptostd # detects functions from golang.org/x/exp/ that can be replaced by std functions
    - forbidigo # forbids identifiers
    - funcorder # checks the order of functions, methods, and constructors
    - gochecknoglobals # checks that no global variables exist
    - gochecknoinits
    - gochecknoinits # checks that no init functions are present in Go code
    - gochecksumtype # checks exhaustiveness on Go "sum types"
    - goconst
    - gocritic
    - gocyclo
    - gosec
    - govet
    - iface # checks the incorrect use of interfaces, helping developers avoid interface pollution
    - ineffassign # detects when assignments to existing variables are not used
    - nakedret # finds naked returns in functions greater than a specified function length
    - nestif # reports deeply nested if statements
    - nilerr # finds the code that returns nil even if it checks that the error is not nil
    - nilnesserr # reports that it checks for err != nil, but it returns a different nil value error (powered by nilness and nilerr)
    - nilnil # checks that there is no simultaneous return of nil error and an invalid value
    - noctx # finds sending http request without context.Context
    - nonamedreturns # reports all named returns
    - revive
    - sloglint # ensure consistent code style when using log/slog
    - spancheck # checks for mistakes with OpenTelemetry/Census spans
    - sqlclosecheck # checks that sql.Rows and sql.Stmt are closed
    - staticcheck
    - testableexamples # checks if examples are testable (have an expected output)
    - testpackage # makes you use a separate _test package
    - tparallel # detects inappropriate usage of t.Parallel() method in your Go test codes
    - unconvert # removes unnecessary type conversions
    - unused # checks for unused constants, variables, functions and types
    - usestdlibvars # detects the possibility to use variables/constants from the Go standard library
    - whitespace # detects leading and trailing whitespace

    # - depguard # checks if package imports are in a list of acceptable packages
  settings:
    dupl:
      threshold: 100
    errcheck:
      check-type-assertions: true
      check-blank: true
    govet:
      # Enable all analyzers.
      enable-all: true
      disable:
        - fieldalignment # too strict
      settings:
        shadow:
          strict: true
    revive:
      rules:
        - name: context-as-argument
          disabled: false
    sloglint:
      # Enforce not using global loggers.
      no-global: all
      # Enforce using methods that accept a context.
      context: all
    embeddedstructfieldcheck:
      # Checks that sync.Mutex and sync.RWMutex are not used as embedded fields.
      # Default: false
      forbid-mutex: true
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
formatters:
  enable:
    - gofmt
    - gofumpt
    - goimports
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
