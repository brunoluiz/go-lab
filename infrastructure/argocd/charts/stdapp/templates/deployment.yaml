apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deployment.name" . }}
  labels:
    {{- include "deployment.labels.standard" . | nindent 4 }}
spec:
  replicas: 2
  selector:
    matchLabels:
      {{- include "deployment.labels.matchLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        {{- include "deployment.labels.standard" . | nindent 8 }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "deployment.name" . }}
      {{- end }}
      # TODO: topologySpreadConstraints
      containers:
      - name: {{ include "deployment.name" . }}
        {{- if .Values.image.digest }}
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}@{{ .Values.image.digest }}
        {{- else }}
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        {{- end }}
        ports: {{- range .Values.deployment.ports }}
          - containerPort: {{ . }}
        {{- end }}
        resources:
          {{- toYaml .Values.deployment.resources | nindent 10}}
        env:
          {{- toYaml .Values.deployment.env | nindent 10}}
        # TODO: enforce these, since the deployment is managed through here
        readinessProbe:
          {{- toYaml .Values.deployment.readinessProbe | nindent 10}}
        livenessProbe:
          {{- toYaml .Values.deployment.livenessProbe | nindent 10}}
        startupProbe:
          {{- toYaml .Values.deployment.startupProbe | nindent 10}}
        # Can be ensured with Kyverno policies
        securityContext:
          capabilities:
            drop: [ALL]
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
