name: CI (golang)

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      monogo: ${{ steps.monogo.outputs.detect }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true
      - env:
          DEBUG_CONTEXT: ${{ toJson(github) }}
          DEBUG_JOB_CONTEXT: ${{ toJson(job) }}
          DEBUG_STEPS_CONTEXT: ${{ toJson(steps) }}
          DEBUG_RUNNER_CONTEXT: ${{ toJson(runner) }}
          DEBUG_STRATEGY_CONTEXT: ${{ toJson(strategy) }}
          DEBUG_MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: make ci-debug
      - uses: jdx/mise-action@v3
      - uses: ./.github/actions/cache-go-modules
      - id: monogo
        run: echo "detect=$(make monogo)" | tee -a "$GITHUB_OUTPUT" "$GITHUB_STEP_SUMMARY"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [prepare]
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: jdx/mise-action@v3
      - uses: ./.github/actions/cache-golangci-lint
      - uses: ./.github/actions/cache-go-modules
        with:
          restore-only: "true"
      - run: make lint

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [prepare]
    steps:
      - uses: actions/checkout@v5
      - uses: jdx/mise-action@v3
      - uses: ./.github/actions/cache-go-build
      - uses: ./.github/actions/cache-go-modules
        with:
          restore-only: "true"
      - run: make test

  build:
    # if: github.ref == 'refs/heads/main'
    if: ${{ fromJSON(needs.prepare.outputs.monogo).changed == true }}
    name: Build (${{ matrix.entrypoint.path }})
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write # required for trivy
      security-events: write # required for trivy
      packages: write # required for docker
      attestations: write # required for cosign
      id-token: write
    needs: [prepare, test]
    strategy:
      matrix:
        entrypoint: ${{ fromJSON(needs.prepare.outputs.monogo).entrypoints }}
    env:
      docker_registry: ghcr.io
      docker_user: ${{ github.actor }}
      docker_password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v5
      - uses: jdx/mise-action@v3
      - uses: ./.github/actions/cache-go-modules
        with:
          restore-only: "true"
      - uses: ./.github/actions/cache-go-build
        with:
          restore-only: "true"
      - shell: bash
        run: . ./scripts/monogo-entrypoint-path.sh ${{ matrix.entrypoint.path }} && make docker-all
