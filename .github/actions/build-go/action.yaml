name: 'Build (go)'
inputs:
  id:
    type: string
    required: true
  main:
    type: string
    required: true
  helm:
    type: string
  github-token:
    type: string
    required: true

outputs:
  id:
    value: ${{ inputs.id }}
  helm:
    value: ${{ inputs.helm }}
  image:
    value: ${{ steps.ko.outputs.image }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
    - uses: ko-build/setup-ko@v0.6
    - uses: sigstore/cosign-installer@v3.5.0

    # NOTE: used for ko.build and cosign, but NOT trivy
    - name: 'docker: login to github container registry'
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: 'docker: prepare image metadata'
      uses: docker/metadata-action@v5
      id: meta
      with:
        sep-tags: ","
        sep-labels: ","
        tags: |
          type=sha
          type=sha,format=long
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: 'ko: build'
      id: ko
      shell: bash
      run: |
        export KO_DOCKER_REPO=ghcr.io/${{ inputs.id }}
        image=$(ko build ${{ inputs.main }} --bare --tags '${{ steps.meta.outputs.tags }}' --image-label '${{ steps.meta.outputs.labels }}' --sbom-dir ./sbom)
        mv sbom/*.json sbom.cdx.json
        echo "image=$image" >> $GITHUB_OUTPUT
        echo "helm=${{ inputs.helm }}" >> $GITHUB_OUTPUT

    - name: 'cosign: sign the images with github oidc token'
      shell: bash
      run: cosign sign --yes '${{ steps.ko.outputs.image }}'

    - name: 'cosign: attest the image sbom'
      shell: bash
      run: cosign attest --type spdx --predicate sbom.cdx.json '${{ steps.ko.outputs.image }}'

    - name: 'trivy: run vulnerability scanner'
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ steps.ko.outputs.image }}
        format: 'sarif'
        output: 'trivy-results.sarif'
      env:
        TRIVY_USERNAME: ${{ github.actor }}
        TRIVY_PASSWORD: ${{ inputs.github-token }}

    - name: 'trivy: upload scan results to github security tab'
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
